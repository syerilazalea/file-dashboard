{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/USER/dashboarddd/context/ThemeContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\n\r\ntype ThemeContextType = {\r\n  isDarkMode: boolean;\r\n  toggleTheme: () => void;\r\n};\r\n\r\nconst ThemeContext = createContext<ThemeContextType | undefined>(undefined);\r\n\r\nexport function ThemeProvider({ children }: { children: React.ReactNode }) {\r\n  const [isDarkMode, setIsDarkMode] = useState(true);\r\n\r\n  const toggleTheme = () => {\r\n    setIsDarkMode(!isDarkMode);\r\n    document.documentElement.classList.toggle('dark');\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isDarkMode) {\r\n      document.documentElement.classList.add('dark');\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <ThemeContext.Provider value={{ isDarkMode, toggleTheme }}>\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  );\r\n}\r\n\r\nexport const useTheme = () => {\r\n  const context = useContext(ThemeContext);\r\n  if (!context) throw new Error('useTheme must be used within ThemeProvider');\r\n  return context;\r\n};"],"names":[],"mappings":";;;;;AAAA;;;AAOA,MAAM,6BAAe,CAAA,GAAA,qMAAA,CAAA,gBAAa,AAAD,EAAgC;AAE1D,SAAS,cAAc,EAAE,QAAQ,EAAiC;IACvE,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAE7C,MAAM,cAAc;QAClB,cAAc,CAAC;QACf,SAAS,eAAe,CAAC,SAAS,CAAC,MAAM,CAAC;IAC5C;IAEA,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,YAAY;YACd,SAAS,eAAe,CAAC,SAAS,CAAC,GAAG,CAAC;QACzC;IACF,GAAG,EAAE;IAEL,qBACE,8OAAC,aAAa,QAAQ;QAAC,OAAO;YAAE;YAAY;QAAY;kBACrD;;;;;;AAGP;AAEO,MAAM,WAAW;IACtB,MAAM,UAAU,CAAA,GAAA,qMAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,CAAC,SAAS,MAAM,IAAI,MAAM;IAC9B,OAAO;AACT","debugId":null}},
    {"offset": {"line": 50, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/USER/dashboarddd/app/layout.tsx"],"sourcesContent":["import { ThemeProvider } from '../context/ThemeContext';\r\n\r\nexport default function RootLayout({ children }: { children: React.ReactNode }) {\r\n  return (\r\n    <html lang=\"en\">\r\n      <body>\r\n        <ThemeProvider>\r\n          {children}\r\n        </ThemeProvider>\r\n      </body>\r\n    </html>\r\n  );\r\n}"],"names":[],"mappings":";;;;AAAA;;;AAEe,SAAS,WAAW,EAAE,QAAQ,EAAiC;IAC5E,qBACE,8OAAC;QAAK,MAAK;kBACT,cAAA,8OAAC;sBACC,cAAA,8OAAC,wHAAA,CAAA,gBAAa;0BACX;;;;;;;;;;;;;;;;AAKX","debugId":null}},
    {"offset": {"line": 84, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/USER/dashboarddd/node_modules/next/src/server/route-modules/app-page/vendored/rsc/react-jsx-dev-runtime.ts"],"sourcesContent":["module.exports = require('../../module.compiled').vendored[\n  'react-rsc'\n].ReactJsxDevRuntime\n"],"names":["module","exports","require","vendored","ReactJsxDevRuntime"],"mappings":";AAAAA,OAAOC,OAAO,GAAGC,QAAQ,4HAAyBC,QAAQ,CACxD,YACD,CAACC,kBAAkB","ignoreList":[0],"debugId":null}}]
}