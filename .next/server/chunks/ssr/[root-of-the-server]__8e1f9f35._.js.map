{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/USER/dashboarddd/context/ThemeContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\n\r\ntype ThemeContextType = {\r\n  isDarkMode: boolean;\r\n  toggleTheme: () => void;\r\n};\r\n\r\nconst ThemeContext = createContext<ThemeContextType | undefined>(undefined);\r\n\r\nexport function ThemeProvider({ children }: { children: React.ReactNode }) {\r\n  const [isDarkMode, setIsDarkMode] = useState(true);\r\n\r\n  const toggleTheme = () => {\r\n    setIsDarkMode(!isDarkMode);\r\n    document.documentElement.classList.toggle('dark');\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isDarkMode) {\r\n      document.documentElement.classList.add('dark');\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <ThemeContext.Provider value={{ isDarkMode, toggleTheme }}>\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  );\r\n}\r\n\r\nexport const useTheme = () => {\r\n  const context = useContext(ThemeContext);\r\n  if (!context) throw new Error('useTheme must be used within ThemeProvider');\r\n  return context;\r\n};"],"names":[],"mappings":";;;;;AAAA;;;AAOA,MAAM,6BAAe,CAAA,GAAA,qMAAA,CAAA,gBAAa,AAAD,EAAgC;AAE1D,SAAS,cAAc,EAAE,QAAQ,EAAiC;IACvE,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAE7C,MAAM,cAAc;QAClB,cAAc,CAAC;QACf,SAAS,eAAe,CAAC,SAAS,CAAC,MAAM,CAAC;IAC5C;IAEA,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,YAAY;YACd,SAAS,eAAe,CAAC,SAAS,CAAC,GAAG,CAAC;QACzC;IACF,GAAG,EAAE;IAEL,qBACE,8OAAC,aAAa,QAAQ;QAAC,OAAO;YAAE;YAAY;QAAY;kBACrD;;;;;;AAGP;AAEO,MAAM,WAAW;IACtB,MAAM,UAAU,CAAA,GAAA,qMAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,CAAC,SAAS,MAAM,IAAI,MAAM;IAC9B,OAAO;AACT","debugId":null}},
    {"offset": {"line": 82, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/USER/dashboarddd/components/Sidebar.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { usePathname } from \"next/navigation\";\r\nimport Link from \"next/link\";\r\nimport { House, Users, Locate, Route, Settings, Menu } from \"lucide-react\";\r\nimport { useTheme } from \"../context/ThemeContext\";\r\n\r\nconst ICONS = {\r\n  House,\r\n  Users,\r\n  Locate,\r\n  Route,\r\n  Settings,\r\n};\r\n\r\nconst Sidebar = () => {\r\n  const [isSidebarOpen, setSidebarOpen] = useState(true);\r\n  const [sidebarItems, setSidebarItems] = useState<any[]>([]);\r\n  const [isMobile, setIsMobile] = useState(false); // tambah: cek device kecil\r\n  const pathname = usePathname() || \"\"; // Pastikan pathname tidak undefined\r\n  const { isDarkMode, toggleTheme } = useTheme();\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const res = await fetch(\"/data/data.json\");\r\n        if (!res.ok) throw new Error(\"Failed to fetch data\");\r\n        const data = await res.json();\r\n        setSidebarItems(data.sidebarItems);\r\n      } catch (error) {\r\n        console.error(\"Error fetching sidebar data:\", error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Fungsi cek ukuran layar\r\n    const handleResize = () => {\r\n      setIsMobile(window.innerWidth < 768); // Tailwind breakpoint md: 768px\r\n    };\r\n\r\n    handleResize(); // Cek saat pertama kali render\r\n    window.addEventListener(\"resize\", handleResize); // Update saat window resize\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, []);\r\n\r\n  // Kalau mobile, sidebar selalu kecil\r\n  const sidebarWidth = isMobile ? \"w-20\" : isSidebarOpen ? \"w-64\" : \"w-20\";\r\n\r\n  return (\r\n    <div className={`relative z-10 transition-all duration-300 ease-in-out flex-shrink-0 ${sidebarWidth}`}>\r\n      <div className={`h-full ${isDarkMode ? 'bg-[#1e1e1e]' : 'bg-white'} backdrop-blur-md p-4 flex flex-col border-r ${isDarkMode ? 'border-[#2f2f2f]' : 'border-gray-200'}`}>\r\n        <div className=\"flex justify-between items-center\">\r\n          <button\r\n            onClick={() => !isMobile && setSidebarOpen(!isSidebarOpen)}\r\n            className={`p-2 rounded-full ${isDarkMode ? 'text-white hover:bg-[#2f2f2f]' : 'text-gray-800 hover:bg-gray-100'} transition-colors max-w-fit cursor-pointer`}\r\n          >\r\n            <Menu size={24} />\r\n          </button>\r\n\r\n          <button\r\n            onClick={toggleTheme}\r\n            className={`p-2 rounded-full ${isDarkMode ? 'text-white hover:bg-[#2f2f2f]' : 'text-gray-800 hover:bg-gray-100'} transition-colors`}\r\n          >\r\n            {isDarkMode ? <Sun size={20} /> : <Moon size={20} />}\r\n          </button>\r\n        </div>\r\n\r\n        <nav className=\"mt-8 flex-grow\">\r\n          {sidebarItems.map((item) => {\r\n            const IconComponent = ICONS[item.icon];\r\n            if (!IconComponent) return null;\r\n\r\n            return (\r\n              <Link key={item.name} href={item.href}>\r\n                <div\r\n                  className={`flex items-center p-4 text-sm font-medium rounded-lg transition-colors mb-2 \r\n                    ${isDarkMode \r\n                      ? 'text-white hover:bg-[#2f2f2f]' \r\n                      : 'text-gray-800 hover:bg-gray-100'\r\n                    } \r\n                    ${pathname === item.href \r\n                      ? isDarkMode ? 'bg-[#2f2f2f]' : 'bg-gray-100' \r\n                      : ''\r\n                    }`}\r\n                >\r\n                  <IconComponent size={20} style={{ minWidth: \"20px\" }} />\r\n                  {!isMobile && isSidebarOpen && (\r\n                    <span className=\"ml-4 whitespace-nowrap\">{item.name}</span>\r\n                  )}\r\n                </div>\r\n              </Link>\r\n            );\r\n          })}\r\n        </nav>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n"],"names":[],"mappings":"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","debugId":null}}]
}